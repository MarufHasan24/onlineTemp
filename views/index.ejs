<!DOCTYPE html>
<html>
<meta name="viewport" content="width=device-width, initial-scale=1">

<head>
    <title>Checkmate</title>
    <link rel="stylesheet" href="/assets/styles/common.css">
    <link rel="stylesheet" href="/assets/styles/index.css">
    <script src="/assets/scripts/tools.js"></script>
</head>

<body>
    <iframe src="/background.html" frameborder="0"></iframe>
    <header>
        <nav id="nav-container"></nav>
    </header>
    <main>
        <nav id="app">
            <!-- Content will be inserted here based on user status -->
        </nav>
    </main>
    <footer>
        <p><b>&copy;2024</b> For any needs, you can contact me on my <a
                href=" https://meta.wikimedia.org/wiki/User_talk:মোহাম্মদ_মারুফ">Talk page</a></p>
    </footer>
</body>
<script>
    function updateInput(value) {
        document.getElementById('customLangcode').value = value;
    }

    document.getElementById('customLangcode').addEventListener('input', function () {
        document.getElementById('langcode').value = "";
    });
</script>
<script type="module">
    //imports
    import { decrypt, encrypt } from "/assets/scripts/lib.js"
    let key = "IOt0opzjmObdTqewC/FGm5PHNmV+7QuhbHmox5bpfFE=";
    let data = JSON.parse(localStorage.getItem(key) || null);
    let apiuser = JSON.parse(validateStr("<%= user %>") || null);
    const appDiv = document.getElementById("app");
    const navContainer = document.getElementById("nav-container");
    let user = {};
    //let's go

    if (
        (data && data.user && data.expire > Date.now()) ||
        apiuser
    ) {
        if (data && data.user) {
            user = JSON.parse(decrypt(data.user, data.username))
        } else {
            user = apiuser
        }
        if (user && Object.keys(user).length) {
            navContainer.innerHTML = `
    <h1>Welcome, ${(user.displayName)}!</h1>
    <ul class="menu">
      <li><a href="#">Home</a></li>
      <li><a href="/dashboard">Dashboard</a></li>
      <li><a onclick="localStorage.removeItem('${key}')" href="/logout?username=${user.displayName}">Logout</a></li>
      <li><a href="javascript:void" onclick="history.back()">Go back</a></li>
    </ul>`;

            appDiv.innerHTML =
                '<h1>Let\'s Go!</h1><div class="container" id="container"><div class="form-container sign-in-container"><form action="#"><h1>New compitition</h1><select id="list"></select><h3>wiki porject</h3><input type="text" id="customLangcode" placeholder="Type or select a language code"><div class="project"><select id="langcode" name="langcode" onchange="updateInput(this.value)"><option value="">-- Select a language code --</option><option value="species">species</option><option value="www">www</option><option value="commons">commons</option><option value="meta">meta</option></select><select name="porject" id="project"><option value="wikipedia">wikipedia</option><option value="wikiquote">wikiquote</option><option value="wiktionary">wiktionary</option><option value="wikivoyage">wikivoyage</option><option value="wikibooks">wikibooks</option><option value="mediawiki">mediawiki</option><option value="wikidata">wikidata</option><option value="wikinews">wikinews</option><option value="wikisource">wikisource</option><option value="wikimedia">wikimedia</option><option value="wikiversity">wikiversity</option></select></div><input type="text" id="hostname" placeholder="Name" /><button id="host">Host</button></form></div><div class="form-container sign-up-container"><form action="#"><h1>Find Compitittion</h1><input id="searchkey" type="email" placeholder="key" /><input id="searchname" type="text" placeholder="name" /><input id="searchproject" type="text" placeholder="project" /><input id="searchhost" type="text" placeholder="host name" /><button id="search">Search</button></form></div><div class="overlay-container"><div class="overlay"><div class="overlay-panel overlay-left"><h1>Welcome Back!</h1><p>Provide key, name or host name to find out your compition which should be hosted already</p><button class="ghost" id="signIn">Host new Compititon</button></div><div class="overlay-panel overlay-right"><h1>Hello, ' +
                user.displayName +
                ' </h1><p>Provide required information and host a compition using listed templates</p><button class="ghost" id="signUp">Search your compitition</button></div></div></div></div>';
            localStorage.setItem(
                key,
                JSON.stringify({
                    user: encrypt(JSON.stringify(user), user.username),
                    username: user.username,
                    expire: Date.now() + 30 * 24 * 60 * 60 * 1000,
                })
            );
        }
        else {
            navContainer.innerHTML = `
    <ul class="menu">
      <li><a href="/login">Login</a></li>
    </ul>`;
            appDiv.innerHTML =
                "<h1>Welcome to Checkmate!</h1><p>Please login first to continue</p>";
        }
    } else {
        navContainer.innerHTML = `
    <ul class="menu">
      <li><a href="/login">Login</a></li>
    </ul>`;
        appDiv.innerHTML =
            "<h1>Welcome to Checkmate!</h1><p>Please login first to continue</p>";
    }
    let list = JSON.parse(('["<%=list%>"]').split(",").join("\",\""));
    window.onload = () => {
        const signInButton = document.getElementById("signIn");
        const signUpButton = document.getElementById("signUp");
        const container = document.getElementById("container");
        signInButton.addEventListener("click", () => {
            container.classList.remove("right-panel-active");
        });
        signUpButton.addEventListener("click", () => {
            container.classList.add("right-panel-active");
        });
        // list of templates
        let listparent = document.querySelector("#list");
        list.forEach((e) => {
            listparent.innerHTML += "<option value='" + e + "'>" + e + "</option>";
        });
        //generate random keys and pass for user
        function generateRandomKey(len) {
            const timestamp = Date.now().toString(36);
            const chars =
                "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
            function randomString(length) {
                let result = "";
                for (let i = 0; i < length; i++) {
                    const randomIndex = Math.floor(Math.random() * chars.length);
                    result += chars[randomIndex];
                }
                return result;
            }
            const randomPartLength = len - timestamp.length;
            const randomPart = randomString(randomPartLength);
            const randomKey = split(randomPart, timestamp);
            function split(value, elem) {
                let index = Math.floor(Math.random() * value.length);
                return value.substring(0, index) + elem + value.substring(index);
            }
            return randomKey;
        }
        const hostname = document.getElementById("hostname");
        document.querySelector("#host").onclick = (e) => {
            e.preventDefault();
            let langcode = document.querySelector("#customLangcode").value;
            let project = document.querySelector("#project").value;
            let projecturl = langcode + "." + project;
            checkWikimediaAPI(projecturl, function (isValid) {
                if (isValid) {
                    if (hostname.value) {
                        fetch("/template", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({
                                key: generateRandomKey(30),
                                password: generateRandomKey(15),
                                template: listparent.value,
                                userdata: user,
                                compname: hostname.value,
                                project: projecturl
                            }),
                        })
                            .then((res) => res.json())
                            .then((data) => {
                                if (data && data.result) {
                                    location.replace("/template?data=" + data.data);
                                } else {
                                    console.log(data)
                                }
                            });
                    } else {
                        alert("Please choose a name for your compitition!")
                    }
                } else {
                    //alert user that its a non valid url
                    alert(projecturl + " is not a valid wikimedia project")
                }
            })
        }
        document.querySelector("#search").onclick = (e) => {
            e.preventDefault();
            let key = document.getElementById("searchkey"),
                name = document.getElementById("searchname"),
                host = document.getElementById("searchhost"),
                project = document.getElementById("searchproject");
            let query = new URLSearchParams({
                key: key.value || "",
                name: name.value || "",
                host: host.value || "",
                project: project.value || "",
            }).toString();
            location.replace("/query?" + query);
        };
        //check api validity
        function checkWikimediaAPI(projecturl, callback) {
            const url = `https://${projecturl}.org/w/api.php?action=query&meta=siteinfo&format=json&origin=*`;

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data && data.query && data.query.general) {
                        // Valid API
                        callback(true);
                    } else {
                        // Invalid API
                        callback(false);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    callback(false); // In case of any error, consider it invalid
                });
        }
    }
</script>

</html>